<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trip97.modules.member.model.mapper.MemberMapper">

    <resultMap id="member" type="member">
        <result column="profile_image" property="profileImage" />
        <result column="role" property="role" />
        <result column="oauth_provider" property="oAuthProvider" />
        <result column="friend_code" property="friendCode" />
        <result column="is_deleted" property="isDeleted" />
        <result column="refresh_token" property="refreshToken" />
    </resultMap>

    <resultMap id="profileImageDto" type="profileImageDto">
        <result column="member_id" property="memberId"/>
        <result column="save_folder" property="saveFolder"/>
        <result column="original_file" property="originalFile"/>
        <result column="save_file" property="saveFile"/>
    </resultMap>

    <insert id="insertMember" parameterType="member">
        insert into members (email, nickname, oauth_provider, friend_code)
        values (#{email}, #{nickname}, #{oAuthProvider}, #{friendCode})
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            select last_insert_id()
        </selectKey>
    </insert>

    <select id="selectMemberByEmail" parameterType="string" resultMap="member">
        select *
        from members
        where email = #{email}
    </select>
    
    <select id="selectMemberById" parameterType="int" resultMap="member">
        select *
        from members
        where id = #{id}
    </select>

    <select id="selectMemberByFriendCode" parameterType="string" resultMap="member">
        select *
        from members
        where friend_code = #{friendCode}
    </select>

    <select id="selectMemberByRefreshToken" parameterType="string" resultMap="member">
        select *
        from members
        where refresh_token = #{refreshToken}
    </select>

    <update id="updateMember" parameterType="member">
        update members
        set nickname = #{nickname}, profile_image = #{profileImage}, introduction = #{introduction}
        where id = #{id}
    </update>

    <insert id="registerFile" parameterType="profileImageDto">
        insert into member_file_info (member_id, save_folder, original_file, save_file, url)
        values (#{memberId}, #{saveFolder}, #{originalFile}, #{saveFile}, #{url})
    </insert>

    <update id="updateFile" parameterType="profileImageDto">
        update member_file_info
        set save_folder = #{saveFolder}, original_file = #{originalFile}, save_file = #{saveFile}, url = #{url}
        where member_id = #{memberId}
    </update>

    <select id="getFileInfo" parameterType="int" resultMap="profileImageDto">
        select member_id, save_folder, original_file, save_file, url
        from member_file_info
        where member_id = #{memberId}
    </select>

</mapper>