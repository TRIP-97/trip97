<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trip97.modules.friendship.model.mapper.FriendshipMapper">
	
	<resultMap type="friendship" id="friendship">
		<result column="member_id" property="memberId" />
		<result column="counterpart_id" property="counterpartId" />
		<result column="is_from" property="isFrom" />
	</resultMap>
	
	<select id="findCode" parameterType="string">
		select id
		from friend_codes
		where code = #{code}
	</select>
	
	<insert id="insertFriendship" parameterType="friendship">
		insert into friendships (member_id, counterpart_id, status, is_from)
		values (#{memberId}, #{counterpartId}, #{status}, #{isFrom})
	</insert>
	
	<select id="selectFriendships" parameterType="int" resultMap="friendship">
		select id, member_id, counterpart_id, status, is_from
		from friendships
		where member_id = #{memberId}
	</select>
	
	<select id="selectFriendshipById" parameterType="int" resultMap="friendship">
		select id, member_id, counterpart_id, status, is_from
		from friendships
		where id = #{id}
	</select>
	
	<select id="selectFriendshipByMemberIdAndCounterpartId" parameterType="hashmap">
		select id, member_id, counterpart_id, status, is_from
		from friendships
		where member_id = #{memberId} and counterpart_id = #{counterpartId}
	</select>
	
	<update id="updateFriendshipStatus" parameterType="friendship">
		update friendships
		set status = #{status}
		where id = #{id}
	</update>

	<delete id="deleteFriendshipById" parameterType="int">
		delete
		from friendships
		where id = #{id}
	</delete>

	<select id="checkIfMemberExistsInFriendships" parameterType="int" resultType="boolean">
		SELECT COUNT(1)
		FROM friendships
		WHERE member_id = #{memberId} OR counterpart_id = #{memberId}
	</select>

	<delete id="deleteFriendshipByDisconnect" parameterType="map">
		delete
		from friendships
		where member_id = #{toId} AND counterpart_id = #{fromId}
	</delete>
	
</mapper>